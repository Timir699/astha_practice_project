import { GetStaticPaths, GetStaticProps } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import { useRouter } from 'next/router';
import React, { useEffect, useState } from 'react';
import { BsFillCartPlusFill } from 'react-icons/bs';
import { CartProduct, Product, Products } from '../../model/product';
import { useStore } from '../../store/cartStore';


export const getStaticProps: GetStaticProps = async () => {
  const res = await fetch('http://localhost:3000/api/products');
  const data = await res.json();

  return {
    props: { products: data },
  };
};

export const getStaticPaths: GetStaticPaths = async () => {
  const res = await fetch('http://localhost:3000/api/products');
  const data = await res.json();

  const paths = data.map((product: { id: { toString: () => Product } }) => {
    console.log(product);
    return {
      params: { id: product.id },
    };
  });
  return {
    paths,
    fallback: false,
  };
};

const ProductDetails = ({ products }: Products) => {
  const router = useRouter();
  const detailsId = router.query.id;
  const detailsData = products.find(product => {
    return product.id === detailsId
  } );

  
  const addCartProduct = useStore(state=>state.addCartProduct);
  const cartProduct = useStore(state=>state.cartProduct);
  const removeQuantity = useStore(state=>state.removeQuantity);
  const [isAdd, setIsAdd] = useState(false)

  const productItem = cartProduct.find( item => item.id === detailsData!.id )

  const handleAddCart = (detailsData: Product) => {
    addCartProduct(detailsData)
    removeQuantity(detailsData!.id)
  }

  const addToCart = () => {
    setIsAdd(true)
  }
  const gotoCheckout = () => {
    router.push('/cart')
  }
  
  return (
    <div>
      <Head>
        <title>Product | E - Cart</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="text-center mt-12">
        <Image src={detailsData?.img!} alt="image" width={300} height={300} />
        <p className="text-3xl">Details of {detailsData?.name}</p>
        <p className="text-3xl">Price : ${detailsData?.price}</p>
        <p className="text-xl mx-72">
          Description : {detailsData?.description}
        </p>
        <p>Product Available : { productItem ? productItem?.quantity : 10}</p>
        <div className="flex justify-center mt-2">
          <button onClick={() => { addToCart()
              isAdd ? gotoCheckout() : handleAddCart(detailsData!)
            } } className="px-6 py-2 transition ease-in duration-200 uppercase rounded-full hover:bg-gray-800 hover:text-white border-2 border-gray-900 focus:outline-none flex items-center">
            <BsFillCartPlusFill />
            <p className="ml-2">{ isAdd ? 'Go to cart' : 'Add to cart'}</p>
          </button>
        </div>
      </div>
    </div>
  );
};

export default ProductDetails;
